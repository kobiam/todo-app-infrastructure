name: B2 - React Build and Push Docker Image

on:
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    env:
      IMAGE_TAG: ${{ github.run_number }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Azure
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Login to ACR via Azure CLI
        run: az acr login --name todoappreg

      - name: React Build and Push Docker Image (frontend)
        run: |
          docker build -t todoappreg.azurecr.io/react-frontend:latest -t todoappreg.azurecr.io/react-frontend:${IMAGE_TAG} ./frontend/todo
          docker push todoappreg.azurecr.io/react-frontend:latest
          docker push todoappreg.azurecr.io/react-frontend:${IMAGE_TAG}

      - name: Upload Image Tag Artifact
        run: echo "${IMAGE_TAG}" > image-tag.txt

      - name: Trigger Deploy Workflow
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: 'C2 - Deploy React App to Azure App Service.yml',
              ref: 'main',
              inputs: {
                imageTag: process.env.IMAGE_TAG
              }
            });

