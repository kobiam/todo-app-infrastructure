name: Deploy Azure Infra with Terraform

on:
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  terraform-deploy:
    name: Terraform Infrastructure
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to Azure via OIDC
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.12.2

      - name: Terraform Init
        # run: terraform init -reconfigure
        run: terraform init -backend-config="storage_account_name=tfstateaccounttodoapp" -backend-config="container_name=tfstate" -backend-config="key=fastapi-app.tfstate" -backend-config="resource_group_name=todo-app"
        working-directory: infrastructure/aks-terraform

      # - name: Terraform Force Unlock
      #   run: terraform force-unlock -force 968d56d6-4e07-4075-c63f-60c8656704fa
      #   env:
      #     ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      #     ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
      #     ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      #     ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      #   working-directory: infrastructure/aks-terraform

      # - name: Clean up lock files
      #   run: rm -rf infrastructure/aks-terraform/.terraform

      - name: Terraform Plan
        run: terraform plan -out=tfplan -lock-timeout=60s \
          -var="subscription_id=${{ secrets.AZURE_SUBSCRIPTION_ID }}" \
          -var="tenant_id=${{ secrets.AZURE_TENANT_ID }}" \
          -var="client_id=${{ secrets.AZURE_CLIENT_ID }}"
        working-directory: infrastructure/aks-terraform

      - name: Terraform Apply
        run: terraform apply -auto-approve
        working-directory: infrastructure/aks-terraform
